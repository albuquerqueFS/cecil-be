openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0 (v1)
  description: Your project description
paths:
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /v1/investments/:
    get:
      operationId: v1_investments_list
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Investment'
          description: ''
    post:
      operationId: v1_investments_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Investment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Investment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Investment'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investment'
          description: ''
  /v1/investments/{id}/:
    get:
      operationId: v1_investments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this investment.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investment'
          description: ''
    put:
      operationId: v1_investments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this investment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Investment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Investment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Investment'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investment'
          description: ''
    patch:
      operationId: v1_investments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this investment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvestment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvestment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvestment'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investment'
          description: ''
    delete:
      operationId: v1_investments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this investment.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v1/movements/:
    get:
      operationId: v1_movements_list
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movement'
          description: ''
    post:
      operationId: v1_movements_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Movement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Movement'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          description: ''
  /v1/movements/{id}/:
    get:
      operationId: v1_movements_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this movement.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          description: ''
    put:
      operationId: v1_movements_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this movement.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Movement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Movement'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          description: ''
    patch:
      operationId: v1_movements_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this movement.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMovement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMovement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMovement'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          description: ''
    delete:
      operationId: v1_movements_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this movement.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v1/movements/balance/:
    get:
      operationId: v1_movements_balance_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          description: ''
  /v1/movements/expense/:
    get:
      operationId: v1_movements_expense_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          description: ''
  /v1/movements/income/:
    get:
      operationId: v1_movements_income_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movement'
          description: ''
  /v1/users/:
    get:
      operationId: v1_users_list
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: v1_users_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Investment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        name:
          type: string
          maxLength: 100
        types:
          $ref: '#/components/schemas/InvestmentTypesEnum'
        category:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - category
      - created_at
      - id
      - name
      - types
      - updated_at
      - user
      - value
    InvestmentTypesEnum:
      enum:
      - CRYPTO
      - STOCK
      type: string
      description: |-
        * `CRYPTO` - Crypto
        * `STOCK` - Bolsa
    Movement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        name:
          type: string
          maxLength: 100
        is_recurrent:
          type: boolean
        types:
          $ref: '#/components/schemas/MovementTypesEnum'
        category:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - category
      - created_at
      - id
      - name
      - types
      - updated_at
      - user
      - value
    MovementTypesEnum:
      enum:
      - INCOME
      - EXPENSE
      type: string
      description: |-
        * `INCOME` - Income
        * `EXPENSE` - Expense
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PatchedInvestment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        name:
          type: string
          maxLength: 100
        types:
          $ref: '#/components/schemas/InvestmentTypesEnum'
        category:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
    PatchedMovement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        name:
          type: string
          maxLength: 100
        is_recurrent:
          type: boolean
        types:
          $ref: '#/components/schemas/MovementTypesEnum'
        category:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_admin:
          type: boolean
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_admin:
          type: boolean
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - created_at
      - email
      - id
      - name
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
